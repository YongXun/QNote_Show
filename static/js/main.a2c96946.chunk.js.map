{"version":3,"sources":["pages/userpad.jsx","pages/notepad.jsx","pages/mottopad.jsx","pages/datepad.jsx","App.jsx","index.js"],"names":["message","config","top","duration","maxCount","rtl","getContainer","document","querySelector","head","UserPad","props","componentWillMount","a","console","log","token","localStorage","getItem","axios","post","then","res","data","ok","setState","online","user","JSON","parse","sessionStorage","noteList","length","get","params","setItem","stringify","note","hideShowIn","catch","err","removeItem","noteNum","completeNoteNum","currentNoteNum","giveUpNoteNum","showSignIn","anime","targets","left","showSignUp","right","hideShowUp","showModal","visible","handleOk","e","signout","handleCancel","signin","signinCheck","email","state","signin_email","password","signin_password","success","info","signup","signupCheck","signup_email","username","signup_username","signup_pwd","verification","signup_valid","setWait","wait","sendEmail","test","valid","innerHTML","easing","round","setTimeout","bind","showUpLoad","zIndex","hideUpLoad","avatarChange","fileReader","FileReader","avatar","files","type","size","readAsDataURL","onload","setAttribute","result","formData","FormData","xhr","XMLHttpRequest","append","open","setRequestHeader","status","send","avatarURL","signup_cpwd","id","loading","upLoading","imageUrl","this","pwd","cpwd","rotate","value","file","isJpgOrPng","error","isLt2M","LoadingOutlined","PlusOutlined","className","onClick","title","onOk","onCancel","width","centered","okText","cancelText","src","alt","height","htmlFor","name","onChange","refresh","spinning","gutter","span","placeholder","target","React","Component","NotePad","handleChange","handleClick","noteContent","noteRemark","noteID","push","done","gNote","ID","forEach","index","splice","noteList2","dNote","cNote","map","key","MottoPad","getMotto","motto","copy","tag","createElement","hitokoto","getElementById","appendChild","select","execCommand","remove","from_who","from","rom_who","DatePad","count","begindate","Date","replace","current","myDate","getFullYear","getMonth","getDate","startDate","getTime","endDate","parseInt","countString","past","years","start","startYear","startMonth","startDay","currentYear","currentMonth","currentDay","months","Math","abs","floor","middleDate","setFullYear","setMonth","days","string","titleChange","input","date","dateChange","dateString","submit","check","memorialOnLine","memorial","showToday","style","backgroundColor","random","color","App","to","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.a2c96946.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Avatar , message , Modal , Statistic, Row , Col , Progress , Button , Input ,Spin , Upload} from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport anime from 'animejs';\r\nimport axios from 'axios';\r\nimport '../css/userpad.scss';\r\nimport 'antd/dist/antd.css';\r\n\r\nmessage.config({\r\n    top:100,\r\n    duration: 1,\r\n    maxCount: 1,\r\n    rtl: false,\r\n    getContainer:() => document.querySelector('.App') || document.head\r\n});\r\n\r\nclass UserPad extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            online:false,\r\n            avatarURL:'',\r\n            signin_email:'',\r\n            signin_password:'',\r\n            signup_email:'',\r\n            signup_username:'',\r\n            signup_pwd:'',\r\n            signup_cpwd:'',\r\n            signup_valid:'',\r\n            visible:false,\r\n            wait:false,\r\n            user:{\r\n                id:'string',\r\n                username:'string',\r\n                email:'string',\r\n                noteNum:0,\r\n                completeNoteNum:0,\r\n                currentNoteNum:0,\r\n                giveUpNoteNum:0\r\n            },\r\n            loading:false,\r\n            upLoading:false,\r\n            imageUrl:'',\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        console.log('123')\r\n        let token = localStorage.getItem('token');\r\n        if(token !== null){\r\n            await axios.post(`https://qnote.qfstudio.net/api/authToken`,{\r\n            token\r\n            }).then(res=>{\r\n                //有效token\r\n                if(res.data.ok){\r\n                    this.setState({\r\n                        online:true\r\n                    })\r\n                    let user = JSON.parse(sessionStorage.getItem('user') || '[]');\r\n                    let noteList = JSON.parse(sessionStorage.getItem('noteList') || '[]');\r\n                    if(user.length === 0){\r\n                        axios.get(`https://qnote.qfstudio.net/api/user/getMessage`,{\r\n                            params:{\r\n                                token:localStorage.getItem('token')\r\n                            }\r\n                        })\r\n                        .then(res=>{\r\n                            this.setState({\r\n                                user:res.data.user\r\n                            })\r\n                            sessionStorage.setItem('user',JSON.stringify(res.data.user));\r\n                            sessionStorage.setItem('noteList',JSON.stringify(res.data.note));\r\n                            this.setState({\r\n                                user:res.data.user,\r\n                                noteList:res.data.noteList\r\n                            })\r\n                            //隐藏登录框\r\n                            this.hideShowIn();\r\n                        })\r\n                        .catch((err)=>{\r\n                            console.log(err);\r\n                        })\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            user:user,\r\n                            noteList:noteList\r\n                        })\r\n                    }\r\n                }\r\n                // 无效token,本地用户\r\n                else{\r\n                    localStorage.removeItem('token');\r\n                    let user = JSON.parse(localStorage.getItem('user'));\r\n                    if(user === null){\r\n                        user = {\r\n                            noteNum:0,\r\n                            completeNoteNum:0,\r\n                            currentNoteNum:0,\r\n                            giveUpNoteNum:0\r\n                        };\r\n                        localStorage.setItem('user',JSON.stringify(user));\r\n                    }\r\n                    this.setState({\r\n                        user:user\r\n                    });\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            if(user === null){\r\n                user = {\r\n                    noteNum:0,\r\n                    completeNoteNum:0,\r\n                    currentNoteNum:0,\r\n                    giveUpNoteNum:0\r\n                };\r\n                localStorage.setItem('user',JSON.stringify(user));\r\n            }\r\n            this.setState({\r\n                user:user\r\n            });\r\n        }\r\n    }\r\n\r\n    // 显示登录框\r\n    showSignIn = () => {\r\n        anime({\r\n            targets:'.signinpad',\r\n            left:'0'\r\n        })\r\n    }\r\n\r\n    //显示注册框\r\n    showSignUp = () => {\r\n        anime({\r\n            targets:'.signuppad',\r\n            right:'0'\r\n        })\r\n    }\r\n    \r\n    //隐藏登录框\r\n    hideShowIn = () =>{\r\n        anime({\r\n            targets:'.signinpad',\r\n            left:'-100%'\r\n        })\r\n    }\r\n\r\n    //隐藏注册框\r\n    hideShowUp = () =>{\r\n        anime({\r\n            targets:'.signuppad',\r\n            right:'-100%'\r\n        })\r\n    }\r\n\r\n    //是否退出\r\n    showModal = () => {\r\n        this.setState({\r\n            visible:true\r\n        })\r\n    };\r\n\r\n    //确定退出\r\n    handleOk = (e) => {\r\n        console.log(typeof e)\r\n        this.signout();\r\n        this.setState({\r\n            visible:false\r\n        })\r\n        // setVisible(false);\r\n    };\r\n\r\n    //取消退出\r\n    handleCancel = (e) => {\r\n        this.setState({\r\n            visible:false\r\n        })\r\n    };\r\n\r\n    signinCheck(){\r\n        let reg = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\r\n        let email = this.state.signin_email;\r\n        let pwd = this.state.signin_password;\r\n        if(!reg.test(email)){\r\n            message.info('请输入正确格式的邮箱！')\r\n            return false\r\n        }\r\n        if(pwd.length<6 || pwd.length>10){\r\n            message.info('密码长度不合法');\r\n            return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    signin = async () => {\r\n        if(!this.signinCheck()){return};\r\n        let email= this.state.signin_email;\r\n        let password= this.state.signin_password;\r\n        await axios.post(`https://qnote.qfstudio.net/api/signin`,{\r\n            email,\r\n            password,\r\n        })\r\n        .then(res=>{\r\n            localStorage.setItem('token',res.data.token);\r\n            this.setState({\r\n                online:true\r\n            })\r\n            message.success('登录成功');\r\n        })\r\n        .catch((err)=>{\r\n            message.info('登录失败，请检查您的邮箱与密码');\r\n            return\r\n        })\r\n        this.setState({\r\n            signin_email:'',\r\n            signin_password:''\r\n        })\r\n        axios.get(`https://qnote.qfstudio.net/api/user/getMessage`,{\r\n            params:{\r\n                token:localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(res=>{\r\n            this.setState({\r\n                user:res.data.user\r\n            })\r\n            sessionStorage.setItem('user',JSON.stringify(res.data.user));\r\n            sessionStorage.setItem('noteList',JSON.stringify(res.data.note));\r\n            //隐藏登录框\r\n            this.hideShowIn();\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    signupCheck(){\r\n        let reg = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\r\n        let pwd = this.state.signup_pwd;\r\n        let cpwd = this.state.signup_cpwd;\r\n        let valid = this.state.signup_valid;\r\n        if(!reg.test(this.state.signup_email)){\r\n            message.info('请输入正确格式的邮箱')\r\n            return false\r\n        }\r\n        if(pwd.length < 6 || pwd.length > 10){\r\n            message.info('密码长度需在6与10之间')\r\n            return false\r\n        }\r\n        if(cpwd !== pwd){\r\n            message.info('两次密码不一致')\r\n            return false\r\n        }\r\n        if(!valid){\r\n            message.info('请输入您的邮箱验证码')\r\n            return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // 注册\r\n    signup = async () => {\r\n        if(!this.signupCheck()){return;}\r\n        await axios.post(`https://qnote.qfstudio.net/api/register`,{\r\n            email:this.state.signup_email,\r\n            username:this.state.signup_username,\r\n            password:this.state.signup_pwd,\r\n            verification:this.state.signup_valid\r\n        })\r\n        .then((res)=>{\r\n            message.success('注册成功')\r\n        })\r\n        .catch(err=>{\r\n            console.log(this.state.signup_email)\r\n            console.log(this.state.signup_username)\r\n            console.log(this.state.signup_pwd)\r\n            console.log(this.state.signup_valid)\r\n            message.info('注册失败，请检查您的信息是否正确');\r\n        })\r\n    }\r\n\r\n    setWait = (wait) => {\r\n        console.log('转换')\r\n        this.setState({\r\n            wait\r\n        })\r\n    }\r\n\r\n    //发送邮件\r\n    sendEmail = async () => {\r\n        if(this.state.wait){\r\n            message.info('请等待')\r\n        }\r\n        else{\r\n            let reg = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\r\n            if(reg.test(this.state.signup_email)){              \r\n                axios.post('https://qnote.qfstudio.net/api/sendEmail',{\r\n                    email:this.state.signup_email\r\n                })\r\n                .then(res=>{\r\n                    if(res.data.valid){\r\n                        message.success('发送成功！');\r\n                        this.setWait(true);\r\n                        anime({\r\n                            targets:'.count',\r\n                            innerHTML:[60,0],\r\n                            easing:'linear',\r\n                            round:1,\r\n                            duration:60000\r\n                        })\r\n                        setTimeout(this.setWait.bind(this,false), 60000);\r\n                    }\r\n                    else{\r\n                        message.info('发送失败！')\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                message.info('请输入正确格式的邮箱！');\r\n            }\r\n        }\r\n    }\r\n\r\n    //退出登录\r\n    signout = () => {\r\n        localStorage.removeItem('token');\r\n        this.setState({\r\n            online:false\r\n        })\r\n    }\r\n\r\n    //刷新数据\r\n    async refresh(){\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        anime({\r\n            targets:'.refresh',\r\n            rotate:[\r\n                {value:'360deg',duration:10000,easing: 'linear'},\r\n                {value:'0deg',},\r\n            ]\r\n        })\r\n        switch(this.state.online){\r\n            case true:\r\n                axios.get(`https://qnote.qfstudio.net/api/user/getMessage`,{\r\n                    params:{\r\n                        token:localStorage.getItem('token')\r\n                    }\r\n                })\r\n                .then(res=>{\r\n                    this.setState({\r\n                        user:res.data.user\r\n                    })\r\n                    sessionStorage.setItem('user',JSON.stringify(res.data.user));\r\n                    sessionStorage.setItem('noteList',JSON.stringify(res.data.note));\r\n                    message.success('刷新成功！');\r\n                    this.setState({\r\n                        loading:false\r\n                    })\r\n                    //隐藏登录框\r\n                })\r\n                .catch((err)=>{\r\n                    console.log(err);\r\n                })\r\n                break;\r\n            default:\r\n                let user = JSON.parse(localStorage.getItem('user'));\r\n                if(user === null){\r\n                    user = {\r\n                        noteNum:0,\r\n                        completeNoteNum:0,\r\n                        currentNoteNum:0,\r\n                        giveUpNoteNum:0\r\n                    };\r\n                    localStorage.setItem('user',JSON.stringify(user));\r\n                }\r\n                message.success('刷新成功！');\r\n                this.setState({\r\n                    user:user,\r\n                    loading:false\r\n                })\r\n                break;\r\n        }\r\n    }\r\n    \r\n    //显示上传头像按钮\r\n    showUpLoad = () => {\r\n        anime({\r\n            targets:'.ant-avatar',\r\n            zIndex:'-999'\r\n        })\r\n    }\r\n\r\n    //隐藏上传头像按钮\r\n    hideUpLoad = () => {\r\n        anime({\r\n            targets:'.ant-avatar',\r\n            zIndex:'2'\r\n        })\r\n    }\r\n\r\n    // \r\n    avatarChange = async (info)=> {\r\n        if(!this.state.online){message.info('暂不支持本地用户上传头像！');return;}\r\n        const token = localStorage.getItem('token');\r\n        const fileReader = new FileReader();\r\n        const avatar = document.querySelector('#avatar-loader').files[0];\r\n        // console.log(avatar)\r\n        if(avatar.type !== 'image/jpeg' && avatar.type !== 'image/png' && avatar.type !== 'image/jpg'){\r\n            console.log(avatar.type)\r\n            message.info('仅支持JPEG和PNG格式的图片！');\r\n            return;\r\n        }\r\n        const isLt2M = avatar.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n          message.info('图片大小不可大于2MB！');\r\n          return;\r\n        }\r\n        fileReader.readAsDataURL(avatar);\r\n        // 头像修改\r\n        fileReader.onload = function () {\r\n            document.querySelector('#avatar').setAttribute('src',fileReader.result)\r\n        };\r\n        //头像上传\r\n        const formData = new FormData();\r\n        const xhr = new XMLHttpRequest();\r\n        formData.append('avatar', avatar);\r\n        xhr.open(\"POST\",`https://qnote.qfstudio.net/api/user/avatar`);\r\n        xhr.setRequestHeader('Content-Type','multipart/form-data');\r\n        xhr.setRequestHeader('Token',token);\r\n        xhr.onload = function () {\r\n    　　　　if (xhr.status === 200) {\r\n    　　　　　　console.log('上传成功');\r\n    　　　　} else {\r\n    　　　　　　console.log('出错了');\r\n    　　　　}\r\n    　　};\r\n    　　xhr.send(formData);\r\n    }\r\n\r\n    beforeUpload(file) {\r\n        if(!this.state.online){message.info('暂不支持本地用户上传头像！');return;}\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n          message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n          message.error('Image must smaller than 2MB!');\r\n        }\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n\r\n    render(){\r\n        const uploadButton = (\r\n            <div>\r\n              {this.state.upLoading ? <LoadingOutlined /> : <PlusOutlined />}\r\n              <div>上传头像</div>\r\n            </div>\r\n          );\r\n\r\n        return(\r\n            <div  className=\"userpad-wrapper\">\r\n                 <header>\r\n                    <Button type=\"primary\" className=\"signin-btn\" onClick={this.state.online?this.showModal.bind(this):this.showSignIn.bind(this)}>{this.state.online?'退出':'登录'}</Button>\r\n                    <Button type=\"primary\" className=\"signup-btn\" onClick={this.showSignUp.bind(this)}>注册</Button>\r\n                </header>\r\n                <main>\r\n                    <Modal\r\n                        title=\"QNote\"\r\n                        visible={this.state.visible}\r\n                        onOk={this.handleOk.bind(this)}\r\n                        onCancel={this.handleCancel.bind(this)}\r\n                        width={300}\r\n                        centered={true}\r\n                        okText=\"退出\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <p>是否退出登录?</p>\r\n                    </Modal>\r\n                    <div className=\"message-box\">\r\n                        <div className=\"avatar-area\">\r\n                            {/* 头像显示 */}\r\n                            <img src={this.state.avatarURL?this.state.avatarURL:\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"} alt=\"\" id=\"avatar\" width=\"200\" height=\"200\"/>\r\n                            {/* 上传头像按钮 */}\r\n                            <div className=\"uploader\">\r\n                                <div>\r\n                                    <Button type=\"primary\"><label htmlFor=\"avatar-loader\" className=\"upload-btn\">上传头像</label></Button>\r\n                                    <input name=\"avatar\" type=\"file\" id=\"avatar-loader\" onChange={this.avatarChange.bind(this)}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"username\">\r\n                            用户:{this.state.online?this.state.user.username:\"游客\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"message\">\r\n                        <div className=\"refresh\">\r\n                            <i className=\"iconfont icon-shuaxin\" title=\"刷新数据\" onClick={this.refresh.bind(this)}></i>\r\n                        </div>\r\n                        <Spin spinning={this.state.loading}>\r\n                            <Row gutter={48}>\r\n                                <Col span={6}>\r\n                                    <Statistic title=\"当前事务数\" value={this.state.user.currentNoteNum} />\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Statistic title=\"历史完成数\" value={this.state.user.completeNoteNum} />\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Statistic title=\"历史放弃数\" value={this.state.user.giveUpNoteNum} />\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Statistic title=\"历史事务数\" value={this.state.user.noteNum} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Spin>      \r\n                    </div>\r\n                    <div className=\"signinpad\">\r\n                    <div className=\"signin\">\r\n                        <i className=\"iconfont icon-quxiao1 signin-cancel\" onClick={this.hideShowIn.bind(this)}></i>\r\n                        <form>\r\n                            <div className=\"input-bar\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"iconfont icon-youxiang1\"></i>\r\n                                </div>\r\n                                <input value={this.state.signin_email} type=\"text\" placeholder=\"请输入您的邮箱\" onChange={(e)=>{this.setState({signin_email:e.target.value})}}/>\r\n                            </div>\r\n                            <div className=\"input-bar\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"iconfont icon-mima\"></i>\r\n                                </div>\r\n                                <input value={this.state.signin_password} type=\"password\" placeholder=\"请输入您的密码\"  onChange={(e)=>{this.setState({signin_password:e.target.value})}}/>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"signin-submit\">\r\n                            <i className=\"iconfont icon-denglu\" onClick={this.signin.bind(this)}></i>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                    <div className=\"signuppad\">\r\n                    <div className=\"signup\">\r\n                        <i className=\"iconfont icon-quxiao1 signup-cancel\" onClick={this.hideShowUp.bind(this)}></i>\r\n                        <form>\r\n                            <div>\r\n                                <div className=\"input-bar\">\r\n                                    <div className=\"icon\">\r\n                                        <i className=\"iconfont icon-youxiang1\"></i>\r\n                                    </div>\r\n                                    <input type=\"text\" placeholder=\"请输入您的邮箱\" value={this.state.signup_email} onChange={(e)=>{this.setState({signup_email:e.target.value})}}/>\r\n                                </div>\r\n                                <button className=\"valid-btn\"onClick={this.sendEmail.bind(this)}>\r\n                                    {\r\n                                        this.state.wait?<span>等候<span className=\"count\"></span>s</span>:<span>获取验证码</span>\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"input-bar\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"iconfont icon-yonghu\"></i>\r\n                                </div>\r\n                                <input type=\"text\" placeholder=\"请输入您的用户名\" value={this.state.signup_username} onChange={(e)=>{this.setState({signup_username:e.target.value})}}/>\r\n                            </div>\r\n                            <div className=\"input-bar\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"iconfont icon-mima\"></i>\r\n                                </div>\r\n                                <input type=\"password\" placeholder=\"请输入您的密码\"  value={this.state.signup_pwd} onChange={(e)=>{this.setState({signup_pwd:e.target.value})}}/>\r\n                            </div>\r\n                            <div className=\"input-bar\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"iconfont icon-mima\"></i>\r\n                                </div>\r\n                                <input type=\"password\" placeholder=\"请再次输入您的密码\"  value={this.state.signup_cpwd} onChange={(e)=>{this.setState({signup_cpwd:e.target.value})}}/>\r\n                            </div>\r\n                            <div className=\"input-bar\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"iconfont icon-yanzhengma\"></i>\r\n                                </div>\r\n                                <input type=\"text\" placeholder=\"请输入您的验证码\"  value={this.state.signup_valid} onChange={(e)=>{this.setState({signup_valid:e.target.value})}}/>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"signup-submit\">\r\n                            <i className=\"iconfont icon-denglu\" onClick={this.signup.bind(this)}></i>\r\n                        </div>\r\n                        </div>\r\n                    </div>  \r\n                </main>\r\n                <footer></footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  UserPad;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\nimport '../css/notepad.scss'\r\n\r\nmessage.config({\r\n    top:100,\r\n    duration: 1,\r\n    maxCount: 1,\r\n    rtl: false,\r\n    getContainer:() => document.querySelector('.App') || document.head\r\n  });\r\n\r\nexport default class NotePad extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            online:false,\r\n            noteList:[],\r\n            info:'',\r\n            user:{\r\n                id:'string',\r\n                username:'string',\r\n                email:'string',\r\n                noteNum:0,\r\n                completeNoteNum:0,\r\n                currentNoteNum:0,\r\n                giveUpNoteNum:0\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        let token = localStorage.getItem('token');\r\n        if(!token){\r\n            console.log('事务列表-离线状态');\r\n            let noteList = JSON.parse(localStorage.getItem('noteList') || '[]');\r\n            this.setState({\r\n                online:false,\r\n                noteList:noteList\r\n            });\r\n        }\r\n        else{\r\n            console.log('事务列表-登录状态');\r\n            let noteList = JSON.parse(sessionStorage.getItem('noteList') || '[]');\r\n            let user = JSON.parse(sessionStorage.getItem('user') || '[]');\r\n            this.setState({\r\n                online:true,\r\n                noteList:noteList,\r\n                user:user\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let len = e.target.value.length;\r\n        if(len < 20){\r\n            this.setState({\r\n                info:e.target.value\r\n            });\r\n        }\r\n        else{\r\n            message.info('注意言简意赅哦！');\r\n        }   \r\n    }\r\n\r\n    handleClick = async (e) => {\r\n        let info = this.state.info;\r\n        if(!info){\r\n            message.info('请输入便签内容！');\r\n        }\r\n        else{\r\n            if(this.state.online){\r\n                console.log('在线用户完成任务');\r\n                let token = localStorage.getItem('token');\r\n                //修改数据库数据，获取noteID\r\n                let noteID = await axios.post(`https://qnote.qfstudio.net/api/note/addTask`,{\r\n                    token:token,\r\n                    noteContent:info,\r\n                    noteRemark:''\r\n                }).then(res=>{\r\n                    return res.data.noteID\r\n                })\r\n                console.log(noteID);\r\n                //修改本地数据\r\n                let noteList = JSON.parse(sessionStorage.getItem('noteList') || '[]');\r\n                noteList.push({\r\n                    noteID:noteID,\r\n                    noteContent:info,\r\n                    noteRemark:'',\r\n                    done:false\r\n                });\r\n                this.setState({\r\n                    noteList:noteList,\r\n                    info:''\r\n                })\r\n                sessionStorage.setItem('noteList',JSON.stringify(noteList));\r\n            }\r\n            else{\r\n                console.log('本地用户添加任务')\r\n                let noteList = JSON.parse(localStorage.getItem('noteList') || '[]');\r\n                noteList.push({\r\n                    noteID:noteList.length,\r\n                    noteContent:this.state.info,\r\n                    noteRemark:'',\r\n                    done:false\r\n                });\r\n                // 修改用户数据\r\n                let user = JSON.parse(localStorage.getItem('user'));\r\n                user.currentNoteNum++;\r\n                user.noteNum++;\r\n                localStorage.setItem('user',JSON.stringify(user))\r\n                this.setState({\r\n                    noteList:noteList,\r\n                    info:'',\r\n                    user:user\r\n                })\r\n                localStorage.setItem('noteList',JSON.stringify(noteList));\r\n            }\r\n        }\r\n    }\r\n\r\n    gNote = (ID) => {\r\n        switch(this.state.online){\r\n            case true:\r\n                console.log('在线用户放弃事务')\r\n                let token = localStorage.getItem('token');\r\n                // 修改本地缓存\r\n                let noteList = this.state.noteList;\r\n                noteList.forEach((note,index)=>{\r\n                    if(note.noteID === ID){\r\n                        noteList.splice(index,1);\r\n                    }\r\n                })\r\n                this.setState({\r\n                    noteList\r\n                })\r\n                sessionStorage.setItem('noteList',JSON.stringify(noteList));\r\n                //发送网络请求\r\n                axios.post(`https://qnote.qfstudio.net/api/note/giveUpTask`,{\r\n                    noteID:ID,\r\n                    token:token,\r\n                    username:this.state.user.username\r\n                })\r\n                break;\r\n            default:\r\n                console.log('本地用户放弃事务')\r\n                let noteList2 = this.state.noteList;\r\n                noteList2.forEach((note,index)=>{\r\n                    if(note.noteID === ID){\r\n                        noteList2.splice(index,1);\r\n                    }\r\n                })\r\n                // 修改用户数据\r\n                let user = JSON.parse(localStorage.getItem('user'));\r\n                user.giveUpNoteNum++;\r\n                user.currentNoteNum--;\r\n                localStorage.setItem('user',JSON.stringify(user))\r\n                this.setState({\r\n                    noteList2\r\n                })\r\n                localStorage.setItem('noteList',JSON.stringify(noteList2));\r\n                break;\r\n        }\r\n    }\r\n\r\n    dNote = (ID) => {\r\n        switch(this.state.online){\r\n            case true:\r\n                console.log('在线用户删除已完成任务')\r\n                let token = localStorage.getItem('token');\r\n                // 修改本地缓存\r\n                let noteList = this.state.noteList;\r\n                noteList.forEach((note,index)=>{\r\n                    if(note.noteID === ID){\r\n                        noteList.splice(index,1);\r\n                    }\r\n                })\r\n                this.setState({\r\n                    noteList\r\n                })\r\n                sessionStorage.setItem('noteList',JSON.stringify(noteList));\r\n                //发送网络请求\r\n                axios.post(`https://qnote.qfstudio.net/api/note/deleteNote`,{\r\n                    noteID:ID,\r\n                    token:token,\r\n                    username:this.state.user.username\r\n                })\r\n                break;\r\n            default:\r\n                console.log('本地用户删除已完成任务')\r\n                let noteList2 = this.state.noteList;\r\n                noteList2.forEach((note,index)=>{\r\n                    if(note.noteID === ID){\r\n                        noteList2.splice(index,1);\r\n                    }\r\n                })\r\n                this.setState({\r\n                    noteList2\r\n                })\r\n                localStorage.setItem('noteList',JSON.stringify(noteList2));\r\n                break;\r\n        }\r\n    }\r\n\r\n    cNote = (ID) => {\r\n        switch(this.state.online){\r\n            case true:\r\n                console.log('在线用户完成任务')\r\n                let token = localStorage.getItem('token');\r\n                // 修改本地缓存\r\n                let noteList = this.state.noteList;\r\n                noteList.forEach((note,index)=>{\r\n                    if(note.noteID === ID){\r\n                        note.done = true;\r\n                     }\r\n                })\r\n                this.setState({\r\n                    noteList\r\n                })\r\n                sessionStorage.setItem('noteList',JSON.stringify(noteList));\r\n                //发送网络请求\r\n                axios.post(`https://qnote.qfstudio.net/api/note/completeTask`,{\r\n                    noteID:ID,\r\n                    token:token,\r\n                    username:this.state.user.username\r\n                })\r\n                break;\r\n            default:\r\n                console.log('本地用户完成任务')\r\n                let noteList2 = this.state.noteList;\r\n                noteList2.forEach((note,index)=>{\r\n                    if(note.noteID === ID){\r\n                       note.done = true;\r\n                    }\r\n                })\r\n                this.setState({\r\n                    noteList2\r\n                })\r\n                // 修改用户数据\r\n                let user = JSON.parse(localStorage.getItem('user'));\r\n                user.completeNoteNum++;\r\n                user.currentNoteNum--;\r\n                localStorage.setItem('user',JSON.stringify(user))\r\n                localStorage.setItem('noteList',JSON.stringify(noteList2));\r\n                break;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"notepad-wrapper\">\r\n                {/* 输入栏 */}\r\n                <header>\r\n                    <input className=\"note-input-bar\"type=\"text\" placeholder=\"输入标签内容后点击按钮添加\" value={this.state.info} onChange={this.handleChange.bind(this)}/>\r\n                    <button onClick={this.handleClick.bind(this)}><i className=\"iconfont icon-bianjibijishishouxie\"></i></button>\r\n                </header>\r\n                <main>\r\n                    {/* 未完成 */}\r\n                    <div className=\"note-not\">\r\n                        <span>未完成</span>\r\n                        {\r\n                            this.state.noteList.map((note,index)=>{\r\n                                if(note.done === false){\r\n                                    return <section className=\"note-n\" key={index}>\r\n                                            <span>{note.noteContent}</span>\r\n                                            <div className=\"tool\">\r\n                                                <i className=\"iconfont icon-lujing\" onClick={this.cNote.bind(this,note.noteID)}></i>\r\n                                                <i className=\"iconfont icon-lajitong\" onClick={this.gNote.bind(this,note.noteID)}></i>\r\n                                            </div>\r\n                                        </section>\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {/* 已经完成 */}\r\n                    <div className=\"note-done\">\r\n                        <span>已完成</span>\r\n                        {\r\n                            this.state.noteList.map((note,index)=>{\r\n                                if(note.done !== false){\r\n                                    return <section className=\"note-c\" key={index}>\r\n                                        <span>{note.noteContent}</span>\r\n                                            <div className=\"tool\">\r\n                                                <i className=\"iconfont icon-lajitong\" onClick={this.dNote.bind(this,note.noteID)}></i>\r\n                                            </div>\r\n                                        </section>\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport axios from 'axios';\nimport '../css/mottopad.scss'\nimport { message } from 'antd';\n\nexport default class MottoPad extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            online : false,\n            motto:{\n                hitokoto:\"会有那么一天\",\n                from_who:'',\n                from:'原创'\n            }\n        }\n    }\n\n    getMotto = () => {\n        axios.get(`https://qnote.qfstudio.net/api/motto`).then((res)=>{\n            this.setState({\n                motto:res.data\n            })\n            console.log(res.data);\n        }).catch((err)=>{console.log(err)})\n    }\n\n    copy = () => {\n        var tag = document.createElement('input');\n        tag.setAttribute('id', 'cp_hgz_input');\n        tag.value = this.state.motto.hitokoto;\n        document.getElementById('copy').appendChild(tag);\n        document.getElementById('cp_hgz_input').select();\n        document.execCommand('copy');\n        document.getElementById('cp_hgz_input').remove();\n        message.success('已经复制到粘贴板上！')\n    }\n\n    componentWillMount(){\n        this.getMotto();\n    }\n\n    render(){\n        return(\n            <div className=\"mottopad-wrapper\">\n                {/* 语录 */}\n                <div className=\"motto-wrapper\">\n                    <div className=\"motto\">\n                        <span className=\"hitokoto\">{this.state.motto.hitokoto}</span>\n                        <span className=\"from\">{`——${this.state.motto.rom_who?this.state.motto.rom_who:''}《${this.state.motto.from}》`}</span>\n                    </div>\n                </div>\n                {/* 工具箱 */}\n                <div className=\"tool\">\n                    {/* 换一条 */}\n                    <button onClick={this.getMotto.bind(this)}><i className=\"iconfont icon-shuaxin\"></i>换一条</button>\n                    {/* 点赞 */}\n                    <button onClick={this.copy.bind(this)}><i className=\"iconfont icon-bianjibijishishouxie\"></i>复制</button>\n                </div>\n                {/* 粘贴板 */}\n                <div id=\"copy\"></div>\n            </div>\n        )\n    }\n}","import axios from 'axios';\nimport React from 'react';\nimport { DatePicker, message , Button} from 'antd';\nimport '../css/datepad.scss'\n\nclass DatePad extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            online:false,\n            memorial : [\n                {title:'中国人民共和国成立',date:'1949-10-01'}\n            ],\n            input:{\n                title:'',\n                date:''\n            }\n        }\n    }\n\n    count = (begindate) => {\n        begindate = new Date(Date.parse(begindate.replace(/-/g, \"/\"))); //将开始时间由字符串格式转换为日期格式       \n\n        let current = new Date(); //此处将服务器当前日期作为结束日期，也可为其他任意时间 )\n\n        let myDate = new Date(Date.parse((`${current.getFullYear()}-${current.getMonth() + 1}-${current.getDate()}`).replace(/-/g, \"/\")))\n\n        let startDate = begindate.getTime()\n\n        let endDate = myDate.getTime(); //将结束日期转换成毫秒  \n\n        let day = parseInt((startDate-endDate)/1000/3600/24); //结束日期减去开始日期后转换成天数    \n        \n        return day;\n    }\n\n    countString = (past) => {\n        var start = new Date(past);//初始化输入时间\n        var startYear = start.getFullYear();//获取输入年份\n        var startMonth = start.getMonth() + 1;//获取输入月份\n        var startDay = start.getDate();//获取输入日期\n     \n        var current = new Date();//当前时间\n        current = new Date(Date.parse((`${current.getFullYear()}-${current.getMonth() + 1}-${current.getDate()}`).replace(/-/g, \"/\")));\n        var currentYear = current.getFullYear();//获取当前年份\n        var currentMonth = current.getMonth() + 1;//获取当前月份\n        var currentDay = current.getDate();//获取当前日期\n        var years = 0;//声明一个年数变量\n        var months = currentMonth - startMonth + (Math.abs(currentYear - startYear)) * 12;//总月\n        if (currentMonth * 100 + currentDay < startMonth * 100 + startDay) {\n            months--;//如果结束日期小月输入日期，月数要-1\n        }\n        years = Math.floor(months / 12);//取整计算年数\n        months = months % 12;//取余计算月数\n        var middleDate = new Date(start);//中间时间\n        middleDate.setFullYear(startYear + years);//设置中间时间年份\n        middleDate.setMonth(start.getMonth() + months);//设置中间时间月份\n        var days =  Math.floor( ( current.getTime()- middleDate.getTime()) / 24 / 60/ 60 / 1000);//计算天数\n        let string = '';\n        if(years){\n            string += `${years}年`;\n        }\n        if(months){\n            string += `${months}月`\n        }\n        if(days){\n            string += `${days}天`\n        }\n        console.log(string)\n        return string;\n    }\n\n    titleChange = (e) => {\n        let len = e.target.value.length;\n        if(len < 10){\n            this.setState({\n                input:{\n                    title:e.target.value,\n                    date:this.state.input.date\n                }\n            });\n        }\n        else{\n            message.info('注意言简意赅哦！');\n        }   \n    }\n\n    dateChange = (date, dateString) => {\n        this.setState({\n            input:{\n                title:this.state.input.title,\n                date:dateString\n            }\n        })\n    }\n\n    check(){\n        if(!this.state.input.title){\n            message.info('请输入标题！');\n            return false;\n        }\n        if(!this.state.input.date){\n            message.info('请选择日期！');\n            return false;\n        }\n        return true;\n    }\n\n    submit = () => {\n        if(!this.check()){\n            message.info('请确保信息填写正确！');\n            return;\n        }\n        console.log(this.state.online)\n        switch(this.state.online){\n            case true:\n                const token = localStorage.getItem('token');\n                console.log('添加纪念日-在线模式');\n                axios.post(`https://qnote.qfstudio.net/api/memorial/add`,{token,...this.state.input}).then(res=>{\n                    message.success('添加成功！');\n                }).catch(err=>{\n                    message.info('添加失败，请检查您的网络！');\n                })\n                let memorialOnLine = JSON.parse(sessionStorage.getItem('memorial') || '[]');\n                memorialOnLine.push(this.state.input);\n                sessionStorage.setItem('memorial',JSON.stringify(memorialOnLine));\n                this.setState({\n                    memorial:memorialOnLine,\n                    input:{\n                        title:'',\n                        date:this.state.input.date\n                    }\n                })\n                break;\n            default:\n                console.log('添加纪念日-离线模式')\n                let memorial = JSON.parse(localStorage.getItem('memorial') || '[]');\n                memorial.push(this.state.input);\n                localStorage.setItem('memorial',JSON.stringify(memorial));\n                this.setState({\n                    memorial:memorial,\n                    input:{\n                        title:'',\n                        date:this.state.input.date\n                    }\n                })\n                break;\n        }\n    }\n\n    async componentWillMount(){\n        let token = localStorage.getItem('token');\n        if(!token){\n            console.log('纪念日列表-离线状态');\n            let memorial = JSON.parse(localStorage.getItem('memorial') || JSON.stringify([{title:'中国人民共和国成立71周年',date:'2020-10-01'}]));\n            this.setState({\n                online:false,\n                memorial:memorial\n            });\n        }\n        else{\n            console.log('纪念日列表-登录状态');\n            let memorial = JSON.parse(sessionStorage.getItem('memorial'));\n            if(!memorial){\n                axios.post(`https://qnote.qfstudio.net/api/memorial`,{\n                    token:token\n                }).then(res=>{\n                    this.setState({\n                        online:true,\n                        memorial:res.data.memorial\n                    })\n                })\n                return;\n            }\n            this.setState({\n                online:true,\n                memorial:memorial\n            })\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"datepad-wrapper\">\n                <div className=\"tool\">\n                    <input type=\"text\" value={this.state.input.title} onChange={this.titleChange.bind(this)} placeholder=\"请输入纪念日主题\" className=\"title-input\"/>\n                    <DatePicker showToday={true} onChange={this.dateChange.bind(this)}></DatePicker>                \n                    <Button type=\"primary\" onClick={this.submit.bind(this)}>添加纪念日</Button>\n                </div>\n                <div className=\"date-list\">\n                    {\n                        this.state.memorial.map((date,index)=>{\n                            return(\n                            <section className=\"date\" key={index} style={{backgroundColor:`rgba(${Math.random()*255},${Math.random()*255},${Math.random()*255},.5)`,color:`rgba(${Math.random()*255},${Math.random()*255},${Math.random()*255},.5)`}}>\n                                <span className=\"title\">{date.title}</span>\n                                <span className=\"date\">{date.date}</span>\n                                <span className={this.count(date.date)===0?'count':'hidden'}>今天</span>  \n                                <span className={this.count(date.date)===0?'hidden':'count'}>{`${Math.abs(this.count(date.date))}${this.count(date.date)<0?'天前':'天后'}`}</span>\n                            </section>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default  DatePad;","import React from 'react';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\nimport { message } from 'antd';\nimport UserPad from './pages/userpad'\nimport NotePad from './pages/notepad'\nimport MottoPad from './pages/mottopad'\nimport DatePad from './pages/datepad'\nimport './App.scss';\n\nmessage.config({\n  top:100,\n  duration: 1,\n  maxCount: 1,\n  rtl: false,\n  getContainer:() => document.querySelector('.App') || document.head\n});\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Router>\n          <nav>\n            <section>\n              <i className=\"iconfont icon-daohanggerenzhongxin\"></i> \n              <Link to=\"/\">QNote</Link>\n            </section>\n            <section>\n              <i className=\"iconfont icon-bianjibijishishouxie\"></i> \n              <Link to=\"/note\">事务列表</Link>\n            </section>\n            <section>\n              <i className=\"iconfont icon-rili\"></i> \n              <Link to=\"./date\">纪念日</Link>\n            </section>\n            <section>\n              <i className=\"iconfont icon-liuyan\"></i> \n              <Link to=\"./motto\" >经典语录</Link>\n            </section>\n            {/* <section>\n              <i className=\"iconfont icon-shezhi\"></i> \n              <Link onClick={()=>{message.info('功能开发中')}}>应用设置</Link>\n            </section> */}\n          </nav>\n          <main className=\"container\">\n            <Route exact path=\"/\" component={UserPad}></Route>\n            <Route path=\"/note\" component={NotePad}></Route>\n            <Route path=\"/date\" component={DatePad}></Route>\n            <Route path=\"/motto\" component={MottoPad}></Route>\n          </main>\n        </Router>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './css/iconfont/iconfont.css'\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}